# Example data generation properties
#
# This file has become more of a documentation source and may not be completely functional
# but it's not nothing.
#
# 'objects' describes how many CSV "objects" to create. One object may span mulitple
# lines. Any column set as 'multi=true' will have different values per row, but considered
# part of the same object.
objects=200
#
# multiMax/Min describe the limits of multi-valued data. I.e., a multi-valued column
# will have at least 2 values, but no more than 10
multiMax=10
multiMin=2

# fields directs which columns are output. There may be more columns defined which
# would just serve to be intermediate values
#fields=acctId,manager,firstName,lastName,region,department,title,email,group
fields=acctId,manager,firstName,lastName,region,department,title,email,csvGroups

# A column is a group of properties defined as 'column.columnName'.
# 'type' describes what type of column it is. The possible values are:
#   file: reads values from a file where each value is on a separate line.
#   csv: reads values from a CSV. You'll need to specify an indexCol and 
#        sourceCol. indexCol is used to correlate multiple rows to one csv object
#        sourceCol is what value to use.
#   hierarchy: used to create a hierarchy with 'node' set as another column
#              in which to source data from.
#   generated: used to create actually random data
#   derived: uses a simpleTextFormat and one or more other columns to create
#            a derived value.
#   incrementer: each value is an integer that counts up, like a database sequence.
#
#csvAcctId
column.csvAcctId.type=csv
column.csvAcctId.file=data\\PlatformApp-UsersData.csv
column.csvAcctId.hasHeaders=true
column.csvAcctId.multi=true
# When reading from a another CSV file representing CSV objects
# and you need to read from a column of single values, set source
# and index as the same column
#
column.csvAcctId.sourceCol=employeeId
column.csvAcctId.indexCol=employeeId


#csvGroups
# Note: to get a random list of CSV data, you have to read a CSV object and the
#       key with a collection value is what we'll randomize from. So to randomize
#       and entire CSV file, define a constant column to group everything under
column.csvGroups.type=csv
column.csvGroups.file=data\\PlatformApp-UsersData.csv
column.csvGroups.hasHeaders=true
column.csvGroups.multi=true
column.csvGroups.sourceCol=groupmbr
column.csvGroups.indexCol=employeeId
column.csvGroups.randomize=true
column.csvGroups.unique=true

#manager
column.manager.type=hierarchy
column.manager.node=acctId
column.manager.depth=3
# Instead of depth, one can specify siblings (aka number of members)
# column.manager.siblings=20

#title
column.title.type=file
column.title.file=c:\\scripts\\data\\titles.txt

#firstname
column.firstName.type=file
column.firstName.file=c:\\scripts\\data\\firstNames.txt

#lastname
column.lastName.type=file
column.lastName.file=c:\\scripts\\data\\lastNames.txt

#middle initial
column.middleInit.type=generated
column.middleInit.characters=ABCDEFGHIJKLMNOPRSTUVWXZ
column.middleInit.maxLength=1

#middle initial field
column.middleInitField.type=derived
column.middleInitField.columns=middleInit
column.middleInitField.format=%1$s.

#acctIdBase
column.acctIdBase.type=derived
column.acctIdBase.columns=firstName,lastName
column.acctIdBase.format=%1.1S%1.3S

#empId
column.empId.type=incrementer
column.empId.start=1
column.empId.padding=6

#acctId
column.acctId.type=derived
column.acctId.columns=acctIdBase,empId
column.acctId.format=%1$s%2$s

#group
column.group.type=file
column.group.file=c:\\scripts\\data\\groupmbr.txt
column.group.multi=true
column.group.unique=true

#group2
column.group2.type=file
column.group2.file=c:\\scripts\\data\\groupmbr.txt
column.group2.multi=true
column.group2.unique=true

#region
column.region.type=file
column.region.file=c:\\scripts\\data\\Regions.txt

#department
column.department.type=file
column.department.file=c:\\scripts\\data\\jobs.txt

#email
column.email.type=derived
column.email.columns=firstName,lastName,emailSuffix
column.email.format=%1$s.%2$s%3$s@corporation.com

#email suffix
column.emailSuffix.type=generated
column.emailSuffix.characters=0123456789
column.emailSuffix.maxLength=1
