log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} %5p %t %c{4}:%L - %m%n

log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.maxFileSize=10000KB
log4j.appender.file.maxBackupIndex=5
log4j.appender.file.File=/temp/rolling_sp.log
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{ISO8601} %5p %t %c{4}:%L - %m%n

### set log levels - for more verbose logging change 'info' to 'debug' ##
log4j.rootLogger=debug,stdout

### set log levels - for more verbose logging change 'info' to 'debug' ##
#log4j.rootLogger=warn,stdout
#log4j.rootLogger=info,file

#log4j.logger.org.hibernate=info
#log4j.logger.org.hibernate=debug
#log4j.logger.org.hibernate=trace
#log4j.logger.org.hibernate.cache=trace
#log4j.logger.org.springframework=info
#log4j.logger.org.quartz=info
# Uncomment to trace all SQL and prepared statement parameter values.
#log4j.logger.org.hibernate.SQL=debug
#log4j.logger.org.hibernate.type=trace

# Will get a warning about using a default configuration, proably
# should be specifying a configuaration?
#log4j.logger.net.sf.ehcache=error

# Suppress "narrowing proxy" hibernate warning.
#log4j.logger.org.hibernate.engine.StatefulPersistenceContext=error

# Suppress warning message about Unparsable lastModified
#log4j.logger.org.apache.myfaces.renderkit.html.util.MyFacesResourceLoader=error
# Suppress warning message about response not having <head> or <body> tags
#og4j.logger.org.apache.myfaces.renderkit.html.util.DefaultAddResource=error
#log4j.logger.org.apache.myfaces.renderkit.html.util.ReducedHTMLParser=error

#log4j.logger.sailpoint.web.util.PhaseTracker=trace
#log4j.logger.com.sun.faces=trace
#log4j.logger.javax.faces=trace
#log4j.logger.sailpoint=info
#log4j.logger.sailpoint.reporting=trace
#log4j.logger.sailpoint.persistence.HibernatePersistenceManager=debug
#log4j.logger.sailpoint.persistence.XmlType=info
#log4j.logger.sailpoint.persistence.MapType=info
#log4j.logger.sailpoint.persistence.PasswordType=info
#log4j.logger.sailpoint.persistence.DateType=info
#log4j.logger.sailpoint.persistence.TriggerInterceptor=info
#log4j.logger.sailpoint.persistence.DebugInterceptor=debug

# Uncomment this to log all SailPoint generated HQL queries and query parameters. 
#log4j.logger.sailpoint.persistence.hql=debug
#log4j.logger.sailpoint.persistence.XmlType=info
#log4j.logger.sailpoint.persistence.MapType=info
#log4j.logger.sailpoint.api.Aggregator=info
#log4j.logger.sailpoint.web.util.TimingFilter=debug
#log4j.logger.sailpoint.api.Certificationer=info
#log4j.logger.net.sf.jasperreports.engine.xml=error
#log4j.logger.sailpoint.api.CorrelationModel=info
#log4j.logger.sailpoint.service.IIQRestService=info
#log4j.logger.sailpoint.task.RoleSynchronizer=info
#log4j.logger.sailpoint.api.Provisioner=info
#log4j.logger.sailpoint.integration.oim.OIMClient=info
log4j.logger.sailpoint.services.api.log.MethodStackAnalzyer=trace
log4j.logger.sailpoint.services.api.log.LogTimer=trace
