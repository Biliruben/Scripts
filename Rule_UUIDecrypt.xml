<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="UUIDecrypt">
  <Description>
	  Decrypts an ID
  </Description>
  <Source>
<![CDATA[ 

    // UUID to deconstruct
    String uuid = "4028812876765b280176765b69a40105";

    private String getIp(String fromHex) {
        StringBuilder ipAddressBuilder = new StringBuilder();

        for (int i = 0; i < 4; i++) {
            int pos = i * 2;
            String octetHex = fromHex.substring(pos, pos + 2);
            String high = null;
            String low = null;
            if (octetHex.length() > 2) {
                high = "0";
                low = octetHex;
            } else {
                high = octetHex.substring(0,1);
                low = octetHex.substring(1,2);
            }
            int decHigh = Integer.parseInt(high, 16);
            int rotated = 0xF - 0x7 + decHigh;
            if (rotated > 0xF) {
                rotated = Math.abs(rotated - 0x10);
            }
            high = Integer.toHexString(rotated);

            int octet=Integer.parseInt(high + low,16);
            ipAddressBuilder.append(octet).append(" ");
        }
        
        return ipAddressBuilder.toString();
    }

    private Date getDateFromHex (String hexDate) {
        // hex date value likely has leading '1' stripped
        // sometime after september 2039, this will be a more complicated
        // assumption
        long dateStamp = Long.parseLong("1" + hexDate, 16);
        return new Date(dateStamp << 8);
    }

    // Main

    StringBuilder buff = new StringBuilder();

    if (uuid == null || "".equals(uuid.trim())) {
        buff.append("Nothing to do");
        return;
    } else if (uuid.length() != 32) {
        buff.append(uuid + " is not a valid 32 character UUID");
        return buff.toString();
    }
    
    String ipAddy = uuid.substring(0, 8);
    String sysTime = uuid.substring(8,16);
    String hiTime = uuid.substring(16,20);
    String loTime = uuid.substring(20, 28);
    String counter = uuid.substring(28, 32);
    
    buff.append("Hex values:\n\n");
    buff.append("ipAddy: " + ipAddy + "\n");
    buff.append("\t" + getIp(ipAddy) + "\n");
    buff.append("sysTime (hex): " + sysTime + "\n");
    Date date = getDateFromHex(sysTime);
    buff.append("\t" + date + "\n");
    buff.append("hiTime: " + hiTime + "\n");
    buff.append("loTime: " + loTime + "\n");
    buff.append("counter: " + counter + " (" + Integer.parseInt(counter, 16) + ")" + "\n");
    
    return buff.toString();
]]>
  </Source>
</Rule>

